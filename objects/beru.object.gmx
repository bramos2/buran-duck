<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>vert</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0.25;

// state machine info
frame = 0;
state = 0;
state_frame = 0;

// wildcard parameters for use with ai attacks
parameter_0 = 0;
parameter_1 = 0;

// num attacks performed
attacks = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var blanny = instance_find(buran, 0);
var angle = arctan2(blanny.y + 65 - y, x - blanny.x + 38) * 180 / pi;
var rants;

/*
var rants =instance_create(x + 34, y + 43, ransu);
rants.direction = angle - 10;
rants.image_angle = angle - 10;
rants.speed = -8;

rants = instance_create(x + 34, y + 43, ransu);
rants.direction = angle + 10;
rants.image_angle = angle + 10;
rants.speed = -8;*/

switch (state) {
    case 0: // idle
        // first attack, which is always basic attack from video
        if (frame == 120 ) {
            state = 1;
            state_frame = 0;
            break;
        }
        
        // randomly choose an attack
        if (state_frame &gt; 90 and state_frame &lt; frame) {
            state = irandom(3);
            state_frame = 0;
            if (attacks % 3 == 0) state = -2;
        } break;
    case 1: // basic attack as shown in video
        // warning flash
        if (state_frame &lt; 18) {
            if (state_frame % 4 == 0) {
                image_blend = -1;
            } else if (state_frame % 4 == 2) {
                image_blend = c_navy;
            }
        }
        
        // color correction failsafe
        if (state_frame == 18) image_blend = -1;
        
        // shoot first bullet
        if (state_frame == 60) {
            rants = instance_create(x, y, ransu);
            rants.direction = angle;
            rants.image_angle = angle;
            rants.speed = -32;
            parameter_0 = angle;
        }
        
        // shoot second bullet
        if (state_frame == 72) {
            rants = instance_create(x, y, ransu);
            if (angle &gt; parameter_0) angle = parameter_0 + 20;
            else angle = parameter_0 - 21;
            rants.direction = angle;
            rants.image_angle = angle;
            rants.speed = -32;
            if (angle &gt; parameter_0) parameter_0 = angle - 40;
            else parameter_0 = angle + 42;
        }
        
        // shoot final bullet
        if (state_frame == 84) {
            rants = instance_create(x, y, ransu);
            rants.direction = parameter_0;
            rants.image_angle = parameter_0;
            rants.speed = -32;
        }
        
        // attack complete, reset to neutral
        if (state_frame == 100) {
            state = 0;
            state_frame = 0;
            attacks++;
        }
        break;
    case 2: // WATCH OUT BLANC THAT LOOKS LIKE A HOMING SHOT
        // warning glitter
        if (state_frame == 1) {
            rants = instance_create(x - 90, y - 120, glitter);
            rants.image_xscale = 0.4;
            rants.image_yscale = 0.4;
        }
        
        // decide the angle
        if (state_frame == 60) {
            // we shoot from the eye, fam
            angle = arctan2(blanny.y + 65 - (y - 130), (x - 100) - blanny.x + 38) * 180 / pi;
            
            // if blanc is on the top of the screen, shoot down
            // if blanc is at the bottom of the screen, shoot up
            if (blanny.y + 65 &lt; 270) {
                parameter_0 = angle - 20;
                parameter_1 = 4;
            } else {
                parameter_0 = angle + 20;
                parameter_1 = -4;
            }
        }
        
        // shoot barrage
        if (state_frame &gt;= 60 and state_frame &lt;= 95 and state_frame % 5 == 0) {
            rants = instance_create(x - 100, y - 130, ransu);
            rants.direction = parameter_0;
            rants.image_angle = parameter_0;
            rants.speed = -32;
            parameter_0 += parameter_1;
        }
        
        // reset to neutral? or maybe go again
        if (state_frame == 120) {
            state_frame = 0;
            attacks++;
            
            // deciding to go again?
            if (irandom(3) == 0 or attacks % 3 == 0) state = 0;
            else state = -1;
        } break; 
    // this is case -1 so that it doesn't trigger normally
    case -1: // reverse ray
        // warning glitter
        if (state_frame == 1) {
            rants = instance_create(x - 110, y - 140, glitter);
            rants.image_bland = c_red;
            rants.image_xscale = 0.4;
            rants.image_yscale = 0.4;
        }
        // warning glitter the second
        if (state_frame == 10) {
            rants = instance_create(x - 70, y - 80, glitter);
            rants.image_bland = c_red;
            rants.image_xscale = 0.4;
            rants.image_yscale = 0.4;
        }
        
        // reverse the direction
        if (state_frame == 60) {
            parameter_0 += parameter_1 * 4;
            parameter_1 *= -1;
        }
        
        // shoot barrage (lol i copy/pasted it)
        if (state_frame &gt;= 60 and state_frame &lt;= 95 and state_frame % 5 == 0) {
            rants = instance_create(x - 100, y - 130, ransu);
            rants.direction = parameter_0;
            rants.image_angle = parameter_0;
            rants.speed = -32;
            parameter_0 += parameter_1;
        }
        
        // reset to neutral
        if (state_frame == 120) {
                state = 0;
                state_frame = 0;
                attacks++;
        } break;
    case -2: // beru beru beam
        // chargeup animation
        if (state_frame == 1) {
            rants = instance_create(x - 70, y + 45, charge);
            rants.image_xscale = 0.25;
            rants.image_yscale = 0.25;
            rants.depth = -100;
        }
        
        // fire animation
        if (state_frame == 150) {
            rants = instance_create(x - 70, y + 45, beam_base);
            rants.depth = -100;
            rants = instance_create(x - 70, y + 45, beam);
            rants.depth = -90;
            rants.image_xscale = 0.01;
        }
        
        // reset to neutral
        if (state_frame == 280) {
            state = 0;
            state_frame = 0;
            attacks++;
        } break;
    case 3: // just spam bullets
        if (state_frame % 38 == 0) {
            // shoot lance
            if (irandom(3) == 0) {
                angle = random(30) - 15;
                
                // the purpose of this variable is to make
                // center shots with the lance less common
                var why = random(200);
                if (why &gt; 70 and why &lt; 130) why = random(200);
                
                rants = instance_create(x - random(130) + 30, y + why - 100, ransu);
                rants.direction = angle;
                rants.image_angle = angle;
                rants.speed = -13;
                rants.depth = -10;
            // shoot rrod
            } else {
                angle = random(50) - 25;
                
                rants = instance_create(x - random(130) + 30, y + random(200) - 100, ring);
                rants.direction = angle;
                rants.image_angle = angle;
                rants.image_xscale = 0.45;
                rants.image_yscale = 0.45;
                rants.speed = -11;
                rants.depth = -9;
            }
        }
        
        // reset to neutral
        if (state_frame == 510) {
            state = 0;
            state_frame = 0;
            attacks++;
        } break;
    case 4:
        // store blanny's current coords to put the X there later
        if (state_frame == 1) {
            parameter_0 = blanny.x;
            parameter_1 = blanny.y;
        }
        
        break;
}

// increment framedata
state_frame++;
frame++;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>712</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_life</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>202</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_change_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>beru_dying</object>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>laser cleanup</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var lazer;

if (instance_number(beam) == 1) {
    lazer = instance_find(beam, 0);
    lazer.finish = true;
}

if (instance_number(beam_base) == 1) {
    lazer = instance_find(beam_base, 0);
    instance_destroy(lazer);
}

if (instance_number(charge) == 1) {
    lazer = instance_find(charge, 0);
    instance_destroy(lazer);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="4" ename="hamma">
      <action>
        <libid>1</libid>
        <id>711</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_life</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>lives - 1</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
