<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>yes_sprite</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>frame</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (image_angle &lt; 180) image_angle -= 1.9;
else image_angle -= 2.6;

if (image_angle &lt; 0) image_angle += 360;


var angled_size = 0;
/*if (image_angle &lt; 150) {
    angled_size = 0;
} else if (image_angle &lt;= 180) {
    angled_size = (150 - image_angle) / 120;
} else if (image_angle &lt;= 200) {
    angled_size = (image_angle - 180) / 40 - 0.25;
} else if (image_angle &lt;= 330) {
    angled_size = (360 - image_angle) / 120;
    
}*/

if (image_angle &lt;= 35) {
    // result is negative: shrink
    angled_size = (image_angle - 35) / 140;
} else if (image_angle &lt;= 130) {
    angled_size = 0;
} else if (image_angle &lt;= 180) {
    // result is positive: grow
    angled_size = (180 - image_angle) / 200 - 0.25;
} else if (image_angle &lt;= 215) {
    // result is negative: shrink
    angled_size = (image_angle - 215) / 70 + 0.25;
} else if (image_angle &lt;= 310) {
    angled_size = 0.25;
} else if (image_angle &lt;= 360) {
    // result is positive: grow
    angled_size = (360 - image_angle) / 100 - 0.25;
}

// boss hp size adjust [IT'S A VERY SLIGHT ADJUSTMENT]
image_xscale = 2 + ((90 - lives) / 270) + angled_size;
image_yscale = 2 + ((90 - lives) / 270);


frame++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
